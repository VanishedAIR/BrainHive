generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  username    String       @unique
  clerkId     String       @unique
  name        String?
  bio         String?
  image       String?
  location    String?
  website     String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  meetings    Meeting?
  posts       StudyGroup[]
  postMembers StudyGroupMember[]
}

model StudyGroup {
  id             String       @id @default(cuid())
  authorId       String
  image          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  isPublic       Boolean
  studyDate      DateTime
  studyGroupName String
  subjects       String
  when2MeetLink  String
  author         User         @relation(fields: [authorId], references: [id])
  status         String
  members        StudyGroupMember[]
}

model StudyGroupMember {
  id        String   @id @default(cuid())
  postId    String
  userId    String
  username  String
  joinedAt  DateTime @default(now())
  post      StudyGroup     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Meeting {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  meetingID Int
  year      Int
  month     Int
  day       Int
  time      Int
  location  String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
